% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vartest.R
\name{lmmtest}
\alias{lmmtest}
\title{A simple test for random effects in regression models, LMM case.}
\usage{
lmmtest(lmmfit, Ztlist.start, Ztlist.end, simulations = 10^6)
}
\arguments{
\item{lmmfit}{A fitted object from the lmer() function.}

\item{Ztlist.start}{The first index (inclusive) in Ztlist corresponding to the random effect to be tested.}

\item{Ztlist.end}{The last index (inclusive) in Ztlist corresponding to the random effect to be tested. For example, giving Ztlist.start=1 and Ztlist.end=2 tells lmmtest that the random effect to be tested consists of elements 1 and 2 in Ztlist. Ztlist is given by getME(lmmfit, "Ztlist"), see examples.}

\item{simulations}{The number of simulations used to obtain the distribution function of the test statistic. Default is 10^6.}
}
\value{
The p-value of the test. Numeric, can be exactly 0. As simulations determine the test statistic distribution repeatedly every time, results may vary slightly with each execution.
}
\description{
An implementation of the test proposed by Simon Wood in the Biometrika paper "A simple test for random effects in regression models". Link: https://doi.org/10.1093/biomet/ast038
}
\examples{

#Example: LMM, one factor, 100 levels, 5 observations per factor.
#Random intercept, random slope, y=3+alpha+z*beta+epsilon, as follows:
library(lme4vartest)

set.seed(123)

#create dataframe
number.factors<-100 
f<-1:number.factors
f<-as.factor(f)
z1<-rnorm(5*number.factors)
intercept<-3
test.df<-data.frame(f=f,
                    z1=z1)

#simulate responses: y has a strong random slope effect, y_ a very weak effect
y<-simLMM(formula=~(1|f)+(0+z1|f),Fixef = c(intercept),VC_sd=list(c(5),c(5),c(2)),data=test.df)
y_<-simLMM(formula=~(1|f)+(0+z1|f),Fixef = c(intercept),VC_sd=list(c(5),c(0.4),c(2)),data=test.df)

test.df$y<-y
test.df$y_<-y_

#fit models to the simulated data
test.model<-lmer(y~(1|f)+(0+z1|f),data=test.df)


#looking at this object, we can see the different components of the Z matrix.
#In this instance, the list contains two terms: that corresponding to the random intercept, and that to the random slope.
#We can also see the corresponding block of Z^T, the (transposed) random effects model matrix.
Ztlist<-getME(test.model,"Ztlist")
Ztlist

#we call the test using the fitted model, and indicate the random effects to be tested
#here we say elements in positions 2 to 2 of Ztlist are to be tested
#(so just element 2, the random slope, in this case)

lmmtest(lmmfit=test.model, Ztlist.start = 2, Ztlist.end =  2, simulations = 10**6) #should give FALSE

#the last two arguments are optional. 
#Simulations describes how many simulations we use to estimate the cdf of the weighted chisquares.
#Because for y, the slope effect is strong, we expect output <0.05 (H0 is rejected).


#Now we fit the model to y_, with weak slope effect.
test.model.alt<-lmer(y_~(1|f)+(0+z1|f),data=test.df)
summary(test.model.alt)
#The weak random effect is just strong enough to be detected.

lmmtest(test.model.alt,2,2)
#Because the effect is weak, we expect the output (p-value) to be >0.05.

#NOTE: the function will return NaN if the estimated variance of a random effect to be tested is 0.
#In this case H0 and H1 are the same, so it makes no sense to run the test anyway.


}
